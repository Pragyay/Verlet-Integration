// ragdoll

// 0
points.push({
    x: 200,
    y: 20,
    oldx: 180 + Math.random()*30,
    oldy: 20
})
//1 
points.push({
    x: 300,
    y: 20,
    oldx: 300,
    oldy: 20
})
//2
points.push({
    x: 270,
    y: 120,
    oldx: 270,
    oldy: 120,
    pinned: true
})
//3
points.push({
    x: 230,
    y: 120,
    oldx: 230,
    oldy: 120,
    pinned: true
})
//4
points.push({
    x: 210,
    y: 200,
    oldx: 210,
    oldy: 200,
    pinned: true
})
//5
points.push({
    x: 290,
    y: 200,
    oldx: 290,
    oldy:200,
    pinned: true
        
})
//6
points.push({
    x: 150,
    y: 60,
    oldx: 150,
    oldy: 60
})
//7
points.push({
    x: 140,
    y: 100,
    oldx: 140,
    oldy: 100
})
//8
points.push({
    x: 350,
    y: 60,
    oldx: 350,
    oldy: 60
})
//9
points.push({
    x: 360,
    y: 100,
    oldx: 360,
    oldy: 100
})

sticks.push({
    p1: points[0],
    p2: points[1],
    length: distance(points[0], points[1])
})
sticks.push({
    p1: points[1],
    p2: points[2],
    length: distance(points[1], points[2])
})
sticks.push({
    p1: points[2],
    p2: points[3],
    length: distance(points[2], points[3])
})
sticks.push({
    p1: points[3],
    p2: points[0],
    length: distance(points[3], points[0])
})

//legs
sticks.push({
    p1: points[3],
    p2: points[4],
    length: distance(points[3], points[4])
})
sticks.push({
    p1: points[2],
    p2: points[5],
    length: distance(points[2], points[5])
})

//hands
sticks.push({
    p1: points[0],
    p2: points[6],
    length: distance(points[0], points[6])
})
sticks.push({
    p1: points[6],
    p2: points[7],
    length: distance(points[6], points[7])
})

sticks.push({
    p1: points[1],
    p2: points[8],
    length: distance(points[1], points[8])
})
sticks.push({
    p1: points[8],
    p2: points[9],
    length: distance(points[8], points[9])
})

// support
sticks.push({
    p1: points[4],
    p2: points[5],
    length: distance(points[4], points[5])
})
sticks.push({
    p1: points[1],
    p2: points[4],
    length: distance(points[1], points[4])
})
sticks.push({
    p1: points[0],
    p2: points[5],
    length: distance(points[0], points[5])
})
//diagonals
sticks.push({
    p1: points[0],
    p2: points[2],
    length: distance(points[0], points[2])
})
sticks.push({
    p1: points[1],
    p2: points[3],
    length: distance(points[1], points[3])
})








// stick figure

// 0
points.push({
    x: 300,
    y: 20,
    oldx: 280 + Math.random()*30,
    oldy: 20
})
//1 
points.push({
    x: 300,
    y: 120,
    oldx: 300,
    oldy: 120
})
//2
points.push({
    x: 270,
    y: 180,
    oldx: 270,
    oldy: 180,
    pinned: true
})
//3
points.push({
    x: 330,
    y: 180,
    oldx: 330,
    oldy: 180,
    pinned: true
})
//4
points.push({
    x: 270,
    y: 240,
    oldx: 270,
    oldy: 240,
    pinned: true
})
//5
points.push({
    x: 330,
    y: 240,
    oldx: 330,
    oldy:240,
    pinned: true
        
})
//6
points.push({
    x: 240,
    y: 70,
    oldx: 240,
    oldy: 70
})
//7
points.push({
    x: 240,
    y: 120,
    oldx: 240,
    oldy: 120
})
//8
points.push({
    x: 360,
    y: 70,
    oldx: 360,
    oldy: 70
})
//9
points.push({
    x: 360,
    y: 120,
    oldx: 360,
    oldy: 120
})


sticks.push({
    p1: points[0],
    p2: points[1],
    length: distance(points[0], points[1])
})
sticks.push({
    p1: points[1],
    p2: points[2],
    length: distance(points[1], points[2])
})
sticks.push({
    p1: points[1],
    p2: points[3],
    length: distance(points[1], points[3])
})
sticks.push({
    p1: points[2],
    p2: points[4],
    length: distance(points[2], points[4])
})
sticks.push({
    p1: points[3],
    p2: points[5],
    length: distance(points[3], points[5])
})
sticks.push({
    p1: points[0],
    p2: points[6],
    length: distance(points[0], points[6])
})

//hands
sticks.push({
    p1: points[0],
    p2: points[6],
    length: distance(points[0], points[6])
})
sticks.push({
    p1: points[6],
    p2: points[7],
    length: distance(points[6], points[7])
})

sticks.push({
    p1: points[0],
    p2: points[8],
    length: distance(points[0], points[8])
})
sticks.push({
    p1: points[8],
    p2: points[9],
    length: distance(points[8], points[9])
})

// // support
sticks.push({
    p1: points[4],
    p2: points[5],
    length: distance(points[4], points[5])
})
sticks.push({
    p1: points[0],
    p2: points[4],
    length: distance(points[0], points[4])
})